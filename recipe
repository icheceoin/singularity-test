bootstrap:docker
From:nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

%environment

    LD_LIBRARY_PATH=/host-libs:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64
    export LD_LIBRARY_PATH
    PATH=/usr/local/cuda/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
    export PATH

%post
    
    export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && apt-get upgrade -y --allow-unauthenticated && \
        apt-get install -y --allow-unauthenticated \
            build-essential \
            cmake \
            cuda-drivers \
            curl \
            git \
            libfreetype6-dev \
            libpng12-dev \
            libssl-dev \
            libxpm-dev \
            libzmq3-dev \
            module-init-tools \
            pkg-config \
            python \
            python-dev \
            python-pil \
            python-tk \
            python3 \
            python3-dev \
            python3-pil \
            python3-tk \
            rsync \
            software-properties-common \
            unzip \
            zip \
            zlib1g-dev \
            openjdk-8-jdk \
            openjdk-8-jre-headless \
            vim \
            wget
    
    apt-get clean 
    rm -rf /var/lib/apt/lists/*
    
    # bazel is required for some TensorFlow projects
    echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" >/etc/apt/sources.list.d/bazel.list
    curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
    
    export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y --allow-unauthenticated \
            bazel
    
    curl -O https://bootstrap.pypa.io/get-pip.py && \
        python get-pip.py && \
        rm get-pip.py
    
    pip --no-cache-dir install \
            Cython \
            jupyter \
            matplotlib \
            protobuf3

    python -m ipykernel.kernelspec
    
    echo "/usr/local/cuda/lib64/" >/etc/ld.so.conf.d/cuda.conf
    echo "/usr/local/cuda/extras/CUPTI/lib64/" >>/etc/ld.so.conf.d/cuda.conf
    
    # Install TensorFlow GPU version
    pip uninstall tensorflow-gpu || true
    pip install --upgrade tensorflow-gpu==1.4
    
    #############################
    # now do the same for python3
    
    curl -O https://bootstrap.pypa.io/get-pip.py && \
        python3 get-pip.py && \
        rm get-pip.py
    
    pip3 --no-cache-dir install \
            Cython \
            jupyter \
            matplotlib \
            protobuf3
    
    python3 -m ipykernel.kernelspec
    
    # Install TensorFlow GPU version
    pip3 uninstall tensorflow-gpu || true
    pip3 install --upgrade tensorflow-gpu==1.4
    
    #############################
    
    # make sure we have a way to bind host provided libraries
    # see https://github.com/singularityware/singularity/issues/611
    mkdir -p /host-libs /etc/OpenCL/vendors
    echo "/host-libs/" >/etc/ld.so.conf.d/000-host-libs.conf

    # lustre
    mkdir -p /ichec/home
    mkdir -p /ichec/work

    # pythonstart
    touch /etc/pythonstart

    # build info
    echo "Timestamp:" `date --utc` | tee /image-build-info.txt
